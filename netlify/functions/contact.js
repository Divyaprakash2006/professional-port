const nodemailer = require('nodemailer');

// Email transporter configuration
const createTransporter = () => {
  return nodemailer.createTransport({
    service: 'gmail',
    auth: {
      user: process.env.EMAIL_USER,
      pass: process.env.EMAIL_APP_PASS,
    },
    tls: {
      rejectUnauthorized: false,
    },
  });
};

exports.handler = async (event, context) => {
  // Only allow POST requests
  if (event.httpMethod !== 'POST') {
    return {
      statusCode: 405,
      headers: {
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Methods': 'POST',
        'Access-Control-Allow-Headers': 'Content-Type',
      },
      body: JSON.stringify({ error: 'Method not allowed' }),
    };
  }

  try {
    const { name, email, message } = JSON.parse(event.body);

    // Validation
    if (!name || !email || !message) {
      return {
        statusCode: 400,
        headers: {
          'Access-Control-Allow-Origin': '*',
          'Access-Control-Allow-Headers': 'Content-Type',
        },
        body: JSON.stringify({
          success: false,
          message: 'All fields are required',
        }),
      };
    }

    // Email validation
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
      return {
        statusCode: 400,
        headers: {
          'Access-Control-Allow-Origin': '*',
          'Access-Control-Allow-Headers': 'Content-Type',
        },
        body: JSON.stringify({
          success: false,
          message: 'Invalid email format',
        }),
      };
    }

    // Create transporter
    const transporter = createTransporter();

    // Email options for notification to you
    const mailOptions = {
      from: process.env.EMAIL_USER,
      to: process.env.RECIPIENT_EMAIL || process.env.EMAIL_USER,
      subject: `üîî New Portfolio Contact: ${name}`,
      html: `
        <div style="font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; max-width: 600px; margin: 0 auto; background: #f8f9fa;">
          <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 30px; text-align: center;">
            <h1 style="color: white; margin: 0; font-size: 24px;">üìß New Contact Message</h1>
            <p style="color: #e8f4f8; margin: 10px 0 0 0;">From your portfolio website</p>
          </div>

          <div style="padding: 30px; background: white;">
            <div style="background-color: #f8f9fa; padding: 25px; border-radius: 10px; margin-bottom: 20px; border-left: 4px solid #667eea;">
              <h3 style="color: #495057; margin-top: 0; font-size: 18px;">üë§ Contact Information</h3>
              <p style="margin: 8px 0;"><strong>Name:</strong> ${name}</p>
              <p style="margin: 8px 0;"><strong>Email:</strong> <a href="mailto:${email}" style="color: #667eea; text-decoration: none;">${email}</a></p>
            </div>

            <div style="background-color: #ffffff; padding: 25px; border: 1px solid #e9ecef; border-radius: 10px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
              <h3 style="color: #495057; margin-top: 0; font-size: 18px;">üí¨ Message</h3>
              <p style="line-height: 1.8; color: #6c757d; font-size: 16px; white-space: pre-wrap;">${message}</p>
            </div>

            <div style="margin-top: 30px; padding: 20px; background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); border-radius: 10px; text-align: center;">
              <p style="margin: 0; color: white; font-weight: 500;">
                üöÄ Reply directly to this email to respond to ${name}
              </p>
            </div>
          </div>

          <div style="padding: 20px; text-align: center; background: #e9ecef;">
            <p style="margin: 0; font-size: 14px; color: #6c757d;">
              Generated by DIVYAPRAKASH V Portfolio Contact System
            </p>
          </div>
        </div>
      `,
    };

    // Auto-reply email options
    const autoReplyOptions = {
      from: process.env.EMAIL_USER,
      to: email,
      subject: '‚úÖ Message Received - DIVYAPRAKASH V',
      html: `
        <div style="font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; max-width: 600px; margin: 0 auto; background: #f8f9fa;">
          <div style="background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%); padding: 30px; text-align: center;">
            <h1 style="color: white; margin: 0; font-size: 24px;">‚úÖ Message Received!</h1>
            <p style="color: #e8f4f8; margin: 10px 0 0 0;">Thank you for reaching out</p>
          </div>

          <div style="padding: 30px; background: white;">
            <div style="background-color: #f8f9fa; padding: 25px; border-radius: 10px; margin-bottom: 20px; border-left: 4px solid #4facfe;">
              <p style="margin: 0; font-size: 16px; line-height: 1.6;">Hi <strong>${name}</strong>,</p>
              <p style="margin: 15px 0; line-height: 1.6;">
                Thank you for contacting me through my portfolio website! üöÄ I have successfully received your message and will get back to you as soon as possible.
              </p>
              <p style="margin: 15px 0; line-height: 1.6;">
                I typically respond within <strong>24-48 hours</strong>. In the meantime, feel free to check out my other projects on my portfolio.
              </p>
            </div>

            <div style="background-color: #ffffff; padding: 25px; border: 1px solid #e9ecef; border-radius: 10px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
              <h3 style="color: #495057; margin-top: 0; font-size: 18px;">üìù Your Message</h3>
              <div style="background: #f8f9fa; padding: 15px; border-radius: 8px; border-left: 3px solid #4facfe;">
                <p style="line-height: 1.8; color: #6c757d; font-size: 15px; margin: 0; white-space: pre-wrap;">"${message}"</p>
              </div>
            </div>

            <div style="margin-top: 30px; padding: 20px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 10px; text-align: center;">
              <p style="margin: 0 0 15px 0; color: white; font-weight: 500;">
                üîó Let's connect and collaborate!
              </p>
              <div style="display: flex; justify-content: center; gap: 15px; flex-wrap: wrap;">
                <a href="https://www.linkedin.com/in/divyaprakash-v-2036222a5"
                   style="display: inline-block; padding: 8px 16px; background: #0077b5; color: white; text-decoration: none; border-radius: 5px; font-weight: 500; transition: all 0.3s ease;">
                  üíº LinkedIn Profile
                </a>
                <a href="https://github.com/divyaprakash-v"
                   style="display: inline-block; padding: 8px 16px; background: #333; color: white; text-decoration: none; border-radius: 5px; font-weight: 500; transition: all 0.3s ease;">
                  üöÄ GitHub Projects
                </a>
              </div>
            </div>
          </div>

          <div style="padding: 25px; text-align: center; background: #e9ecef;">
            <p style="margin: 0 0 10px 0; font-size: 18px; font-weight: 600; color: #495057;">
              Best regards,<br>
              <span style="color: #4facfe;">DIVYAPRAKASH V</span>
            </p>
            <p style="margin: 0; font-size: 14px; color: #6c757d;">
              B.Tech Computer Science & Business Systems<br>
              Full-Stack Developer | AI Enthusiast
            </p>
          </div>
        </div>
      `,
    };

    // Send notification email
    await transporter.sendMail(mailOptions);

    // Send auto-reply email
    await transporter.sendMail(autoReplyOptions);

    return {
      statusCode: 200,
      headers: {
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Headers': 'Content-Type',
      },
      body: JSON.stringify({
        success: true,
        message: 'Email sent successfully!',
      }),
    };
  } catch (error) {
    console.error('Email sending error:', error);
    return {
      statusCode: 500,
      headers: {
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Headers': 'Content-Type',
      },
      body: JSON.stringify({
        success: false,
        message: 'Failed to send email. Please try again later.',
      }),
    };
  }
};
